Задачи на set и frozenset:

1. Напишите функцию, которая принимает два множества и возвращает новое множество, содержащее элементы, которые есть только в одном из них.

2. Создайте функцию, которая проверяет, является ли одно множество подмножеством другого.

3. Напишите программу, которая объединяет два множества без повторяющихся элементов.

4. Напишите функцию, которая принимает неопределенное количество множеств и возвращает их пересечение.

5. Создайте программу, которая удаляет все дубликаты из списка и преобразует его в множество.

6. Напишите функцию, которая проверяет, являются ли два множества дизъюнктивными (не имеют общих элементов).

7. Создайте программу, которая находит симметрическую разность двух множеств.

8. Напишите функцию, которая принимает множество и возвращает список его элементов в отсортированном порядке.

9. Напишите программу, которая проверяет, являются ли два множества равными.

10. Создайте функцию, которая принимает два множества и возвращает True, если первое множество является подмножеством второго, иначе False.

Задачи на функции:

1. Напишите функцию для вычисления факториала числа.

2. Создайте функцию для нахождения наибольшего общего делителя (НОД) двух чисел.

3. Напишите программу, которая определяет, является ли число простым, используя функцию.

4. Создайте функцию, которая принимает список чисел и возвращает новый список, содержащий только четные числа.

5. Напишите функцию, которая принимает строку и возвращает ее в обратном порядке.




Задачи на *args и **kwargs:

1. Напишите функцию, которая принимает неопределенное количество аргументов и возвращает их сумму.

2. Создайте функцию, которая принимает неопределенное количество именованных аргументов и выводит их в алфавитном порядке.

3. Напишите программу, которая принимает неопределенное количество аргументов и возвращает их произведение.

4. Создайте функцию, которая принимает неопределенное количество именованных аргументов и возвращает словарь, где ключами будут названия аргументов, а значениями - их значения.

5. Напишите программу, которая принимает неопределенное количество аргументов и возвращает список квадратов этих аргументов.

